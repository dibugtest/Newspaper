@model IEnumerable<Newspaper.Models.Customer>

@{

    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<style>
    fieldset {
        display: block;
        margin-left: 2px;
        margin-right: 2px;
        padding-top: 0.35em;
        padding-bottom: 0.625em;
        padding-left: 0.75em;
        padding-right: 0.75em;
        border: 2px solid black;
    }

    legend {
        width: auto;
        border: 1.5px solid black;
    }
</style>
<br/>
<div class="panel panel-primary">
    <div class="panel-heading">
        <h1 class="panel-title"><center><h4>Active Customer</h4></center></h1>
    </div>

    <div class="panel-body">

        <div style="overflow-x:auto;">
            <table class="table table-bordered" id="myTable">
                <thead>
                    <tr>


                        <th>
                            Full Name
                        </th>
                        <th>
                            NewsPaper Name
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(model => model.Email)*@
                            Phone:-
                        </th>

                        <th>
                            Address
                        </th>


                        <th>Days Remaining</th>


                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var item in Model)
                    {
                        if ((item.EndedDate - DateTime.Now).Days > 10)
                        {
                            <tr class="success">
                                <td>
                                    @item.FirstName &nbsp; @item.MiddleName &nbsp; @item.LastName
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Service.NewsPaperName)
                                </td>
                                <td>
                                    @item.MPhone
                                </td>


                                <td>
                                    @item.Address
                                </td>


                                @if ((item.EndedDate - DateTime.Now).Days < 1)
                                {
                                    <td>
                                        expired @((DateTime.Now - item.EndedDate).Days) ago
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        @((item.EndedDate - DateTime.Now).Days) Days
                                    </td>
                                }



                                <td>

                                    @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info" })
                                    @Html.ActionLink("ReNew", "Renew", new { id = item.Id }, new { @class = "btn btn-warning" })

                                </td>
                            </tr>
                        }
                        else if ((item.EndedDate - DateTime.Now).Days > 0 || (item.EndedDate - DateTime.Now).Days <= 10)
                        {
                            <tr class="warning">
                                <td>
                                    @item.FirstName &nbsp; @item.MiddleName &nbsp; @item.LastName
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Service.NewsPaperName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.MPhone)
                                </td>


                                <td>
                                    @item.Address &nbsp; @*, &nbsp;@item.Tole*@
                                </td>


                                @if ((item.EndedDate - DateTime.Now).Days < 1)
                                {
                                    <td>
                                        Expire Today
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        @((item.EndedDate - DateTime.Now).Days) Days
                                    </td>
                                }



                                <td>

                                    @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info" })
                                    @Html.ActionLink("ReNew", "Renew", new { id = item.Id }, new { @class = "btn btn-warning" })

                                </td>
                            </tr>

                        }
                    }
                </tbody>

            </table>
        </div>
    </div>
</div>

@section Scripts {
    <link rel=" stylesheet" href="~/Content/DataTables/css/jquery.dataTables.yadcf.css" />

    <link href="~/Content/DataTables/css/jquery.dataTables.css" rel="stylesheet" />
    <link href="~/Content/DataTables/css/dataTables.bootstrap.css" rel="stylesheet" />
    <script src="~/Scripts/datatables/jquery.dataTables.js"></script>
    <script src="~/Scripts/datatables/jquery.dataTables.js"></script>
    <script src="~/Scripts/datatables/dataTables.bootstrap.js">
    </script>

    <script src="~/Scripts/datatables/bootstrap3-typeahead.js"></script>


    <script src="~/Content/DataTables/css/jquery.dataTables.yadcf.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            var dataSrc = [];

            var table = $("#myTable").DataTable({
                "columnDefs": [
                    { "orderable": false, "targets": [2, 4, 5] }

                ],
                "pageLength": 50,

                'initComplete': function () {
                    var api = this.api();

                    // Populate a dataset for autocomplete functionality
                    // using data from first, second and third columns
                    api.cells('tr', [0, 1, 2]).every(function () {
                        // Get cell data as plain text
                        var data = $('<div>').html(this.data()).text();
                        if (dataSrc.indexOf(data) === -1) { dataSrc.push(data); }
                    });

                    // Sort dataset alphabetically
                    dataSrc.sort();

                    // Initialize Typeahead plug-in
                    $('.dataTables_filter input[type="search"]', api.table().container())
                        .typeahead({
                            source: dataSrc,
                            afterSelect: function (value) {
                                api.search(value).draw();
                            }
                        }
                        );
                }
            });
        });






    </script>
}

