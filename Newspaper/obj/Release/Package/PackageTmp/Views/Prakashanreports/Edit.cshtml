@*@model Newspaper.Models.Prakashanreport

    @{
        ViewBag.Title = "Edit";
        Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    }

    <h2>Edit</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Prakashanreport</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.GroupId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GroupId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NewspaperId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NewspaperId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NewspaperId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
@model List<Newspaper.Models.ViewModel.PurchaseReportVM>

@{
    /**/

    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <br />
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h1 class="panel-title">
                <center>
                    <h4>
                        प्रकाशन सच्याउनुहोस गर्नुहोस्
                    </h4>
                </center>
            </h1>
        </div>

        <div class="panel-body">
            @if (ViewBag.message != null)
            {
                <div class="sucess">@ViewBag.message</div>
            }




            <div class="col-md-2">
                <div class="form-group">
                    <label>मिति</label>
                    @*@Html.ValidationMessageFor(model => model.NepaliDate, "", new { @class = "text-danger" })*@

                    @Html.TextBox("NepaliDate", Model[0].NepaliDate, new { id = "txtNepaliDate", @class = "form-control", disabled = "disabled" })



                </div>
            </div>

            <div class="col-md-2">
                <div class="form-group">

                    @*@Html.ValidationMessageFor(model => model.NepaliDate, "", new { @class = "text-danger" })*@
                    <label>&nbsp;</label>
                    <input type="text" id="txtdate" name="Englishdate" class="form-control" value='@Model[0].Date.ToShortDateString()' disabled>



                </div>
            </div>





            @*<div class="col-md-5">
                    <div class="form-group" style="float:right;">
                        <label>Newspaper Name</label>  @Html.ValidationMessageFor(model => model.NewspaperName, "", new { @class = "text-danger" })

                        @Html.DropDownList("NewspaperName", null, "---Select Newspaper---", htmlAttributes: new { @class = "form-control" })

                    </div>
                </div>*@



            <div class="col-md-12">
                <table class="table table-bordered" id="myTable">

                    <thead>
                        <tr>

                            <th>
                               सि.न
                            </th>
                            <th>
                                विवरण
                            </th>
                            <th>
                               गोरखापत्र
                            </th>

                            <th>
                                राईजिङ्ग नेपाल
                            </th>

                            <th>
                                कैफियत
                            </th>



                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int j = 0, k = 1;
                        }


                        @foreach (var item in Model)
                        {
                            <tr>

                                <td style="font-size:20px;">
                                    @StringToUnicode(k.ToString())
                                </td>
                                <td class="nepalifont" style="font-size:20px;">
                                    @item.GroupName
                                </td>
                                <td style="font-size:20px;">

                                    @Html.TextBox("[" + j + "].gp_Total", item.gp_Total, new { @class = "form-control", type = "number" })
                                </td>

                                <td style="font-size:20px;">

                                    @Html.TextBox("[" + j + "].rn_Total", item.rn_Total, new { @class = "form-control", type = "number" })
                                </td>

                                <td class="nepalifont" style="font-size:20px;">
                                    @Html.TextBox("[" + j + "].Remarks", item.Remarks, new { @class = "form-control", style="font-size:20px; " })
                                </td>




                            </tr>
                            @Html.HiddenFor(a => a[j].Id)
                            @Html.HiddenFor(m => m[j].Edit_ID)
                            j++;
                            k++;
                        }
                    </tbody>

                </table>
            </div>

            <div class="form-group">
                <div class="col-md-offset-5 col-md-10">
                    <input type="submit" value="सच्याउनुहोस" class="btn btn-primary">
                </div>
            </div>
        </div>
    </div>

}

@helper StringToUnicode(string data)
{
    string uni = "";
    foreach (char c in data)
    {
        var charCode = "U+" + ((int)c).ToString("X4");
        switch (charCode)
        {
            case "U+0030":
                uni += "०";
                break;
            case "U+0031":
                uni += "१";
                break;
            case "U+0032":
                uni += "२";
                break;
            case "U+0033":
                uni += "३";
                break;
            case "U+0034":
                uni += "४";
                break;
            case "U+0035":
                uni += "५";
                break;
            case "U+0036":
                uni += "६";
                break;
            case "U+0037":
                uni += "७";
                break;
            case "U+0038":
                uni += "८";
                break;
            case "U+0039":
                uni += "९";
                break;
            default:
                uni += c;
                break;
        }
    }
    @uni
}
@helper CheckZero(decimal data)
{
    if (data == 0)
    {
        @StringToUnicode("0.00")
    }
    else
    {
        @StringToUnicode(data.ToString())
    }
}


@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui-1.10.1.custom.min.js"></script>
    <link href="~/css/jquery-ui.css" rel="stylesheet" />
    <link href="~/bootstrap/nepali.datepicker.v2.2.min.css" rel="stylesheet" />
    <script src="~/bootstrap/nepali.datepicker.v2.2.min.js"></script>

    <script type="text/javascript">


        $(document).ready(function () {

            $('#txtNepaliDate', 'body').nepaliDatePicker({

                onChange: function () {
                    $('#txtNepaliDate').val();
                    $('#txtdate').val(BS2AD($('#txtNepaliDate').val()));
                },
                npdMonth: true,
                npdYear: true
            }
            );



        });





    </script>
}


