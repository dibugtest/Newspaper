@model Newspaper.Models.ViewModel.CounterVM

<br />

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h1 class="panel-title"><center><h4>तिर्ने विवरण  </h4></center></h1>
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                <div style="padding-left:15px">
                    <label>ग्राहक नम्बर :</label> : <font style="font-size:20px;" class="nepalifont">
                        @Model.Customer.CustomerId
                    </font> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                    <label>ग्राहक नाम :</label> :<font style="font-size:20px;" class="nepalifont"> @Model.Customer.FirstName </font> <br />

                    <label>फोन :</label> : <font style="font-size:20px;" class="nepalifont">
                        @Model.Customer.MPhone
                    </font> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <label>इमेल : </label> : @Model.Customer.Email<br />
                    <label>ठेगाना : </label> :<font style="font-size:20px;" class="nepalifont">
                        @Model.Customer.Address
                    </font> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <label>पत्रिका :</label><font style="font-size:20px;" class="nepalifont">
                        @Model.NewsPaper.NewsPaperName
                    </font><br />
                    <label>सुरु मिति :</label>@StringToUnicode(Model.Paperdispatch).ToString() &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <label>समाप्त मिति :</label>@StringToUnicode(Model.enddate).ToString()<br />

                </div>
                @using (Html.BeginForm("CustomerActivate", "Counter", FormMethod.Post))
                {
                    <input id="txtServiceAssignId" type="hidden" name="id" value="@Model.ServiceAssign.Id">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>बिल नम्बर </label>
                            <input type="text" class="form-control" name="BillNo" id="txtBillNo" value="@Model.billNo" />@*class="nepalifont form-control" style="font-size:20px;"*@
                        </div>
                    </div>
                    <div class="col-md-3">

                        <div class="form-group">
                            <label>पैसा तिर्ने तरिका </label> @*@Html.ValidationMessageFor(model => model.payment, "", new { @class = "text-danger" })*@

                            @Html.DropDownList("PaymentType", new List<SelectListItem> { new SelectListItem { Text = "पैसा तिर्ने प्रक्रिया ", Value = "" }, new SelectListItem { Text = "नगद", Value = "Cash" }, new SelectListItem { Text = "चेक", Value = "Cheque" } }, new { id = "ddlType", @class = "form-control" })
                            @*@Html.DropDownList("CategoryId", null, "---Select Category---", htmlAttributes: new { @class = "form-control" })*@

                        </div>
                    </div>

                    <div class="row" id="BankDetail">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>बैंकको नाम </label> @*@Html.ValidationMessageFor(model => model.payment, "", new { @class = "text-danger" })*@

                                <input type="text" class="nepalifont form-control" name="BankName" style="font-size:20px;">

                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>खाता नम्बर </label> @*@Html.ValidationMessageFor(model => model.payment, "", new { @class = "text-danger" })*@

                                <input type="text" class="nepalifont form-control" name="ACNumber" style="font-size:20px;">

                            </div>
                        </div>


                    </div>

                    <div class="col-md-3" id="Amount">
                        <div class="form-group">
                            <label>कुल रकम </label> @*@Html.ValidationMessageFor(model => model.payment, "", new { @class = "text-danger" })*@

                            <input type="number" value="0.00" step="0.01" class="form-control" name="Amount" id="txtAmount">

                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="form-group">
                            <label>छुट  (%) </label> @*@Html.ValidationMessageFor(model => model.payment, "", new { @class = "text-danger" })*@

                            <input type="number" step="0.01" class="form-control" value="0.00" name="Discount">

                        </div>
                    </div>



                    <div class="col-md-2">
                        <div class="form-group">
                            <label>पत्रिका सुरु मिति </label>  @*@Html.ValidationMessageFor(model => model.NepaliDate, "", new { @class = "text-danger" })*@
                            <input type="text" class="form-control" name="NepaliDate1" value="@Model.ServiceAssign.NepaliDate" id="txtNepaliDate1">

                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">

                            <label>अबधि </label> @*@Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })*@

                            @Html.DropDownList("Duration", null, new { @class = "form-control", id = "ddlProvience" })
                        </div>
                    </div>



                    <div class="col-md-2">
                        <div class="form-group">
                            <label>पैसा तिरेको मिति  </label> @*@Html.ValidationMessageFor(model => model.payment, "", new { @class = "text-danger" })*@

                            <input type="text" class="form-control" name="NepaliDate" id="txtNepaliDate">

                        </div>
                    </div>



                    <input type="hidden" class="form-control" name="PaperDispatchDate" id="txtPaperDispatchDate" value="@Model.ServiceAssign.PaperDispatchDate">
                    <input type="hidden" class="form-control" name="PaymentDate" id="txtPaymentDate">


                    <div class="form-group">

                        <div class="col-md-10 col-md-offset-5">
                            <input type="submit" value="तिर्नुहोस " class="btn btn-info" id="btnSubmit" onclick="validate()" />

                        </div>

                    </div>


                }

            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui-1.10.1.custom.min.js"></script>
    <link href="~/css/jquery-ui.css" rel="stylesheet" />
    <link href="~/bootstrap/nepali.datepicker.v2.2.min.css" rel="stylesheet" />
    <script src="~/bootstrap/nepali.datepicker.v2.2.min.js"></script>


    <script type="text/javascript">


        $(document).ready(function () {


            function checkDate(serviceId) {
                var status = "false";
                $.ajax({
                    async: false,
                    type: "POST",
                    url: RootUrl + "Counter/CheckDate",
                    data: '{"id":"' + serviceId + '" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response == "true") {
                            status = "true";
                        }

                    }
                })


                return status;
            }

            $("#btnSubmit").click(function (e) {
                if ($("#txtBillNo").val() == "") {
                    alert("Bill No is Required");
                    e.preventDefault();
                }
                if (parseFloat($("#txtAmount").val()) == 0) {
                    alert("Amount Field is Required");
                    e.preventDefault();
                }

                var serviceId = $("#txtServiceAssignId").val();
                if (checkDate(serviceId) == "true") {
                    if (!confirm("Do you want to extend the time period?")) {

                        e.preventDefault();
                    }

                }


            })



            $('#txtNepaliDate', 'body').nepaliDatePicker({
                onChange: function () {
                    $('#txtNepaliDate').val();
                    $('#txtPaymentDate').val(BS2AD($('#txtNepaliDate').val()));
                },
                npdMonth: true,
                npdYear: true
            }
            );

            $('#txtNepaliDate1', 'body').nepaliDatePicker({

                onChange: function () {
                    $('#txtNepaliDate1').val();
                    $('#txtPaperDispatchDate').val(BS2AD($('#txtNepaliDate1').val()));
                },
                npdMonth: true,
                npdYear: true
            }
            );

            $("#Amount").hide();
            $("#BankDetail").hide();
            $("#ddlType").change(function () {


                if ($(this).val() === "Cheque") {
                    $("#Amount").show();
                    $("#BankDetail").show();
                } else {
                    $("#BankDetail").hide();
                    $("#Amount").show();

                }
            });

        });
    </script>


}
@helper StringToUnicode(string data)
{
    string uni = "";
    foreach (char c in data)
    {
        var charCode = "U+" + ((int)c).ToString("X4");
        switch (charCode)
        {
            case "U+0030":
                uni += "०";
                break;
            case "U+0031":
                uni += "१";
                break;
            case "U+0032":
                uni += "२";
                break;
            case "U+0033":
                uni += "३";
                break;
            case "U+0034":
                uni += "४";
                break;
            case "U+0035":
                uni += "५";
                break;
            case "U+0036":
                uni += "६";
                break;
            case "U+0037":
                uni += "७";
                break;
            case "U+0038":
                uni += "८";
                break;
            case "U+0039":
                uni += "९";
                break;
            default:
                uni += c;
                break;
        }
    }
    @uni
}
@helper CheckZero(decimal data)
{
    if (data == 0)
    {
        @StringToUnicode("0.00")
    }
    else
    {
        @StringToUnicode(data.ToString())
    }
}
