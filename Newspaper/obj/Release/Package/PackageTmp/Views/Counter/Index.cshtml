@model IEnumerable<Newspaper.Models.ViewModel.CounterVM>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<style>

    .dataTables_filter input {
        font-family: Preeti;
        font-size: 20px;
    }
</style>
<br />

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h1 class="panel-title"><center><h4>नियुक्ति ग्राहकको लिस्ट </h4></center> </h1>
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                <table class="table table-bordered" id="myTable">
                    <thead>
                        <tr>
                            <th style="width:150px;">
                                पत्रिकाको नाम
                            </th>
                            <th>
                                ग्राहकको नाम
                            </th>
                            <th>
                                ठेगाना
                            </th>

                            <th>
                                फोन नम्बर
                            </th>
                            <th style="width:150px;">
                                समय अबधि
                            </th>
                            <th>
                                कार्य
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                        <tr>
                            <td class="nepalifont" style="font-size:20px;">
                                @item.NewsPaper.NewsPaperName
                            </td>
                            <td class="nepalifont" style="font-size:20px;">
                                @item.Customer.FirstName
                            </td>
                            <td class="nepalifont" style="font-size:20px;">
                                @*@Html.ActionLink(item.Customer.CustomerId, "CustomerDetail", new { id = item.Customer.Id })*@
                                @item.Customer.Address

                            </td>
                            <td class="nepalifont" style="font-size:20px;">
                                @item.Customer.MPhone
                            </td>


                            @if (item.ServiceAssign.BillNo==null)
                            {
                                <td class="danger">
                                    भुक्तानी गर्न बाँकी
                                    </td>
                                    }
                                    else if ((item.ServiceAssign.EndedDate - DateTime.Now).Days < 1)
                                    {
                                <td class="danger">
                                    @StringToUnicode((DateTime.Now - item.ServiceAssign.EndedDate).Days.ToString()) दिन बित्यो
                                </td>
                                        }
                                        else if ((item.ServiceAssign.EndedDate - DateTime.Now).TotalDays > 10)
                                        {
                                            if ((item.ServiceAssign.PaperDispatchDate - DateTime.Now).Days  > 10)
                                            {
                                <td class="success">
                                    @StringToUnicode(((item.ServiceAssign.EndedDate - item.ServiceAssign.PaperDispatchDate).Days).ToString()) दिन बाँकी
                                </td>
                                }
                                else
                                {
                                <td class="success">
                                    @StringToUnicode(((item.ServiceAssign.EndedDate - DateTime.Now).Days ).ToString()) दिन बाँकी
                                </td>
                                }
                                }
                                else
                                {
                                <td class="warning">
                                    @StringToUnicode(((item.ServiceAssign.EndedDate - DateTime.Now).Days).ToString()) दिन बाँकी
                                </td>
                                }

                                @*@Html.ActionLink("Activate", "Activate", new { id=item.ServiceAssign.Id }, new { @class = "btn btn-primary", title = "Activate Customer" }) |
            @Html.ActionLink("Renew", "Renew", new { id=item.ServiceAssign.Id }, new { @class = "btn btn-info", title = "Renew Customer" })*@

                                <td>
                                    @Html.ActionLink("तिर्नुहोस ", "CustomerActivate", new { id = item.ServiceAssign.Id }, new { @class = "btn btn-success", title = "Payment Option" })
                                    @*@Html.ActionLink("पुरा हेर्नुहोस ", "CustomerDetail", new { id = item.Customer.Id }, new { @class = "btn btn-success", title = "View Assign Customer" })*@
                                </td>
                            </tr>
                        }
                    </tbody>

                </table>
            </div>
        </div>
    </div>
</div>


@helper StringToUnicode(string data)
{
    string uni = "";
    foreach (char c in data)
    {
        var charCode = "U+" + ((int)c).ToString("X4");
        switch (charCode)
        {
            case "U+0030":
                uni += "०";
                break;
            case "U+0031":
                uni += "१";
                break;
            case "U+0032":
                uni += "२";
                break;
            case "U+0033":
                uni += "३";
                break;
            case "U+0034":
                uni += "४";
                break;
            case "U+0035":
                uni += "५";
                break;
            case "U+0036":
                uni += "६";
                break;
            case "U+0037":
                uni += "७";
                break;
            case "U+0038":
                uni += "८";
                break;
            case "U+0039":
                uni += "९";
                break;
            default:
                uni += c;
                break;
        }
    }
    @uni
}
@helper CheckZero(decimal data)
{
    if (data == 0)
    {
        @StringToUnicode("0.00")
    }
    else
    {
        @StringToUnicode(data.ToString())
    }
}

@section Scripts {
    <link rel=" stylesheet" href="~/Content/DataTables/css/jquery.dataTables.yadcf.css" />

    <link href="~/Content/DataTables/css/jquery.dataTables.css" rel="stylesheet" />
    <link href="~/Content/DataTables/css/dataTables.bootstrap.css" rel="stylesheet" />
    <script src="~/Scripts/datatables/jquery.dataTables.js"></script>
    <script src="~/Scripts/datatables/jquery.dataTables.js"></script>
    <script src="~/Scripts/datatables/dataTables.bootstrap.js">
    </script>

    <script src="~/Scripts/datatables/bootstrap3-typeahead.js"></script>


    <script src="~/Content/DataTables/css/jquery.dataTables.yadcf.js"></script>

    <script type="text/javascript">


        $(document).ready(function () {

            $("body div.myTable input").addClass("nepalifont");

            var dataSrc = [];

        //    var table = $("#myTable").DataTable({});

            var table = $("#myTable").DataTable({
                "columnDefs": [
                    { "orderable": false, "targets": 3 }

                ],
                "pageLength": 50,

                //'initComplete': function () {
                //    var api = this.api();

                //    // Populate a dataset for autocomplete functionality
                //    // using data from first, second and third columns
                //    api.cells('tr', [0, 1, 2]).every(function () {
                //        // Get cell data as plain text
                //        var data = $('<div>').html(this.data()).text();
                //        if (dataSrc.indexOf(data) === -1) { dataSrc.push(data); }
                //    });

                //    // Sort dataset alphabetically
                //    dataSrc.sort();

                //    // Initialize Typeahead plug-in
                //    $('.dataTables_filter input[type="search"]', api.table().container())
                //        .typeahead({
                //            source: dataSrc,
                //            afterSelect: function (value) {
                //                api.search(value).draw();
                //            }
                //        }
                //        );
                //}
            });
        });






    </script>
}
